x$get()
inv <- cacheSolve(x)
inv
x$getsolve()
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix(m))
cacheSOlve(m)
cacheSolve(m)
m
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
inv
inv <- cacheSolve(x)
inv
cacheSolve(x)
rm(list = ls())
set.seed(12345)
x <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
x <- x[sample(1,5),]
x <- x[sample(1:5),]
x$var2[c(1,3)] <- NA
x
x[,1]
x[,"var1"]
set.seed(13435)
x <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
x <- x[sample(1:5),]
x$var2[c(1,3)] <- NA
x
x[,1]
x[,"var1"]
x[1:2,"var2"]
x[(x$var1 <=3 & x$var3 > 11),]
x[(x$var1 <=3 | x$var3 > 15),]
x[which(x$var2)>1, ]
x[which(x$var2>8),]
x[x$var2>8,]
x[x$var2>8,]
x[which(x$var2>8),]
x[which(x$var2>8),]
x[x$var2>8,]
sort(x$var1)
sort(x$var1, decreasing = TRUE)
sort(x$var2)
sort(x$var2, na.lst = TRUE)
sort(x$var2, na.last = TRUE)
x[order(x$var1),]
x[order(x$var1,x$var3),]
install.packages("plyr")
library(plyr)
arrange(x,var1)
arrange(x,desc(var1))
x$var4 <- rnorm(5)
x
x$var4 <- rnorm(5) ; x
y <- rbind(x, rnorm(5))
y
y <- cbind(x, rnorm(5)); y
getwd()
setwd("C:/Users/Cedric/Documents/GitHub/datascience")
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, dest.file = "./restaurants.csv")
download.file(fileUrl, dest.file = ".restaurants.csv")
download.file(fileUrl, destfile = ".restaurants.csv")
restData <- read.csv("./restaurants.csv")
restData <- read.csv(".restaurants.csv")
restData <- read.csv("restaurants.csv")
restData <- read.csv(".restaurants.csv")
head(restData)
tail(restData)
head(restData, n=3)
tail(restData, n=3)
summary(restData)
str(restData)
quantile(restData$councilDistrict, na.rm= TRUE)
quantile(restData$councilDistrict, probs=c(0.5, 0.75, 0.9))
table(restData$zipCode, useNA="ifany")
table(restData$councilDistrict, restData$zipCode)
sum(is.na(restData$councilDistrict))
any(is.na(restData$councilDistrict))
all(restData$zipCode > 0)
colSums(is.na(restData))
all(colSums(is.na(restData))=0)
all(colSums(is.na(restData))==0)
table(restData$zipCode %in% c("21212")
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212","21213"))
restData[restData$zipCode %in% c("21212","21213"),]
data(UCBAdmissions)
DF <- as.dasta.frame(UCBAdmissions)
DF <- as.data.frame(UCBAdmissions)
summary(DF)
xt <- xtabs(Freq ~ Gender + Admit, DF)
xt <- xtabs(Freq ~ Gender + Admit, data = DF); xt
wrapbreaks$replicate <- rep(1:9, len = 54)
warpbreaks$replicate <- rep(1:9, len = 54)
warpbreaks
xt <- xtabs(Freq ~ ., data = warpbreaks)
xt <- xtabs(breaks ~ ., data = warpbreaks)
xt
ftables(xt)
ftable(xt)
fakeData <- renorm(1exp5)
fakeData <- renorm(1exp(5)
fakeData <- renorm(1exp(5))
fakeData <- renorm(1e5
fakeData <- renorm(1e5)
fakeData <- renorm(1e5)
fakeData <- rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units="Mb")
clear
s1 <- seq(1, 10, by = 2); s1
s2 <- seq(1, 10, len = 10); s2
s2 <- seq(1, 10, length = 3); s2
x <- c(1,3,8,25,100); seq(along = x)
x
?along
x <- c(1,3,8,25,100, 1000); seq(along = x)
restData$nearme <- restData$neighborhoods %in% c("Roland Park", "Homeland")
restData$nearMe <- restData$neighborhoods %in% c("Roland Park", "Homeland")
restData$nearMe <- restData$neighborhood %in% c("Roland Park", "Homeland")
restData$nearMe
table(restData$nearMe)
table(restDAta$zipWrong)
restData$zipWrong <- ifelse(restData$zipCode < 0, TRUE, FALSE)
table(restData$zipWrong)
restData$zipGroups <- cut(restDat$zipCode, breaks = quantile(restData$zipCode))
restData$zipGroups <- cut(restData$zipCode, breaks = quantile(restData$zipCode))
table(restData$zipGroups)
table(restData$zipCode, restData$zipGroups)
table(restData$zipGroups, restData$zipCode)
install.packages("Hmisc")
library(Hmisc)
restData$zipGroups <- cut2(restData$zipCode, g= 4)
table(restData$zipGroups)
restData$zcf <- factor(restData#zipCode)
restData$zcf[1:10]
restData$zcf <- factor(restData$zipCode)
restData$zcf[1:10]
class(restData)
class(restData$zcf)
yesnofac <- factor(yesno, levels=c("yes", "no"))
yesno <- sample(c("yes","no"), size = 10, replace = TRUE)
yesnofac <- factor(yesno, levels=c("yes", "no"))
yesnofac
str(yesnofac)
relevel(yesnofac, ref="yes")
str(yesnofac)
library(plyr)
restData2 <- mutate(restData, zipGroups = cut2(zipCode, g=5))
table(restData2$zipGroups)
install.packages("reshape2")
library(reshape2)
head(mtcars)
rownames(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(matcars, id=c("carnames","gear","cyl"), measure.vars=c("mpg","hp"))
head(mtcars)
carMelt <- melt(mtcars, id=c("carnames","gear","cyl"), measure.vars=c("mpg","hp"))
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars, id=c("carnames","gear","cyl"), measure.vars=c("mpg","hp"))
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars, id=c("carname","gear","cyl"), measure.vars=c("mpg","hp"))
head(carMelt)
tail(carMelt)
cylData <- dcast(carMelt, cyl ~ variable)
cylData <- dcast(carMelt, cyl ~ variable); cylData
cylData <- dcast(carMelt, cyl ~ variable, mean); cylData
head(inspectSpray)
head(InspectSpray)
head(InsectSpray)
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
spIns <- split(InsectSpray$coutn, InsectSpray$spray)
spIns <- split(InsectSprays$count, InsectSprays$spray)
spIns <- split(InsectSprays$count, InsectSprays$spray); spIns
sprCount <- lapply(spIns, sum)
sprCount <- lapply(spIns, sum); sprCount
spIns <- split(InsectSprays$count, InsectSprays$spray); spIns
sprCount <- lapply(spIns, sum); sprCount
unlist(sprCount)
sapply(spIns, sum)
ddply(InsectSprays, .(spray), summaryze, sum = sum(count))
library(plyr)
library(plyr)
ddply(InsectSprays, .(spray), summaryze, sum = sum(count))
ddply(InsectSprays, .(spray), summarize, sum = sum(count))
spraySums <- ddply(InsectSprays, .(spray), summarize, sum = ave(count, FUN = sum))
dim(spraySums)
head(spraySums)
library(dplyr)
install.packages("dplyr")
chicago <- readRDS("chicago.rds")
library(dplyr)
chicago <- readRDS("chicago.rds")
get()
getwd()
fileUrl <- "https://github.com/DataScienceSpecialization/courses/blob/master/03_GettingData/dplyr/chicago.rds"
download.file(fileUrl, destfile = ".chicago.rds")
chicago <- readRDS("chicago.rds")
chicago readRDS(fileUrl)
chicago <- readRDS(fileUrl)
chicago <- readRDS("chicago.rds")
update.packages()
chicago <- readRDS("chicago.rds")
update.packages()
dim(chicago)
fileUrl <- "https://github.com/DataScienceSpecialization/courses/blob/master/03_GettingData/dplyr/chicago.rds"
download.file(fileUrl, destfile = "chicago.rds")
chicago <- readRDS("chicago.rds")
dim(chicago)
getwd()
setwd("C:/Users/Cedric/Documents/GitHub/datascience/Getting_Cleaning_Data")
download.file(fileUrl, destfile = "chicago.rds")
chicago <- readRDS("chicago.rds")
R.Version()
setwd("C:/Users/Cedric/Documents/GitHub/datascience/Getting_Cleaning_Data")
chicago <- readRDS("chicago.rds")
dim(chicago)
head(select(chicago, 1:5))
names(chicago)[1:3]
head(select(chicago, 1:5))
head(select(chicago, city:dptp))
head(select(chicago, -(city:dptp)))
chic.f <- filter(chicago, pm25tmean2 > 30)
head(select(chic.f, 1:3, pm25tmean2), 10)
chic.f <- filter(chicago, pm25tmean2 > 30)
chic.f
head(select(chic.f, 1:3, pm25tmean2), 10)
chic.f <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
head(select(chic.f, 1:3, pm25tmean2, tmpd), 10)
chicago <- arrange(chicago, date)
head(select(chicago, date, pm25tmean2), 3)
tail(select(chicago, date, pm25tmean2), 3)
chicago <- arrange(chicago, desc(date))
head(select(chicago, date, pm25tmean2), 3)
tail(select(chicago, date, pm25tmean2), 3)
head(chicago[, 1:5], 3)
chicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)
head(chicago[, 1:5], 3)
chicago <- mutate(chicago, pm25detrend=pm25-mean(pm25, na.rm=TRUE))
head(select(chicago, pm25, pm25detrend))
chicago <- mutate(chicago, tempcat = factor(1 * (tmpd > 80),
labels = c("cold", "hot")))
tempcat
hotcold <- group_by(chicago, tempcat)
summarize(hotcold, pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2),
no2 = median(no2tmean2))
tempcat = factor(1 * (tmpd > 80),
labels = c("cold", "hot"))
hotcold
summarize(hotcold, pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2),
no2 = median(no2tmean2))
chicago <- mutate(chicago, year = as.POSIXlt(date)$year + 1900)
years <- group_by(chicago, year)
summarize(years, pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1)
%>% group_by(month)
%>% summarize(pm25 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
fileUrl <- "https://github.com/DataScienceSpecialization/courses/blob/master/03_GettingData/dplyr/chicago.rds?raw=true"
download.file(fileUrl, "chicago1.rds")
chicago <- readRDS("chicago1.rds")
dim(chicago)
chicago <- readRDS("chicago1.rds")
chicago1 <- readRDS("chicago1.rds")
dim(chicago1)
if(!file.exist("./data")){create.directory("./data")}
if(!file.exists("./data")){create.directory("./data")}
if(!file.exists("./data")){dir.create("./data")}
fileUrl1 <- "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2 <- "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileUrl1,"./data/reviews.csv")
download.file(fileUrl1,"./data/solutions.csv")
reviews <- read.csv("./data/reviews.csv")
solutions <- read.csv("./data/solutions.csv")
head(redviews, 2)
head(reviews, 2)
head(solutions, 2)
download.file(fileUrl2,"./data/solutions.csv")
solutions <- read.csv("./data/solutions.csv")
head(solutions, 2)
mergedData <- merge(reviews, solutions, by.x="solution_id", by.y="id", all = TRUE)
head(mergedData)
head(reviews, 2)
head(solutions, 2)
mergedData <- merge(reviews, solutions, by.x="solution_id", by.y="id", all = TRUE)
head(mergedData)
intersect(names(solutions), names(reviews))
mergedData2 <- merge(reviews, solutions, all = TRUE)
head(mergedData2)
arrange(join(df1, df2), id)
df1 <- data.frame(id=sample(1:10), x=rnorm(10))
df2 <- data.frame(id=sample(1:10), x=rnorm(10))
arrange(join(df1, df2), id)
df1 <- data.frame(id=sample(1:10), x=rnorm(10))
df2 <- data.frame(id=sample(1:10), x=rnorm(10))
df3 <- data.frame(id=sample(1:10), x=rnorm(10))
join_all(dfList)
dfList <- list(df1, df2, df3)
join_all(dfList)
df1 <- data.frame(id=sample(1:10), x=rnorm(10))
df2 <- data.frame(id=sample(1:10), y=rnorm(10))
df3 <- data.frame(id=sample(1:10), z=rnorm(10))
dfList <- list(df1, df2, df3)
join_all(dfList)
rm(list = ls())
getwd()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
setwd("C:/Users/Cedric/Documents/GitHub/datascience/Getting_Cleaning_Data")
download.file(fileUrl, "housingSurveyIdaho2006.csv")
data <- read.csv("housingSurveyIdaho2006.csv")
dim(data)
head(data)
summary(data)
str(data)
agricultureLogical <- data[which(data$AGS == 6 & data$ACR == 3), ]
head(agricultureLogical, 3)
which(data$AGS == 6 & data$ACR == 3)
agricultureLogical <- which(data$AGS == 6 & data$ACR == 3)
head(agricultureLogical, 3)
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg "
pic <- read.jpeg(fileUrl, "instructor.jpeg")
pic <- jpeg(fileUrl, "instructor.jpeg")
pic <- jpeg(fileUrl, "instructor.jpg")
pic <- readJPEG(fileUrl, "instructor.jpg")
pic <- jpeg(fileUrl, "instructor.jpg")
pic <- jpeg(fileUrl, "instructor")
pic <- jpeg(fileUrl, "instructor.jpg")
download.file(fileUrl,"instructor.jpg")
pic <- jpeg("instructor.jpg")
quantile(pic, probs=c(0.3, 0.80))
pic <- jpeg("instructor.jpg")
pic
pic <- jpeg("instructor.jpg", native = TRUE)
pic <- readJPEG("instructor.jpg", native = TRUE)
download.file(fileUrl,"instructor.jpg")
pic <- readJPEG("instructor.jpg", native = TRUE)
pic <- readJPEG("getdata-jeff.jpg", native = TRUE)
quantile(pic, probs=c(0.3, 0.80))
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl,"instructor.jpg", mode = 'wb')
quantile(pic, probs=c(0.3, 0.80))
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, "countryGrossDomesticProduct.csv")
download.file(fileUrl2, "educational.csv")
countryData <- read.csv("grossDomesticProduct.csv")
countryData <- read.csv("countryGrossDomesticProduct.csv")
educatinalData <- read.csv("educational.csv")
head(countryData)
head(educatinalData)
head(countryData)
str(countryData)
str(educatinalData)
names(countryData)
names(educatinalData)
mergedData <- merge(countryData, educatinalData, by.x="X", by.y="CountryCode", all = TRUE)
head(mergedData)
names(mergedData)
any(is.na(mergedData$X))
sum(is.na(mergedData$X))
sum(is.na(mergedData$CountryCode))
intersect(countryData$X, educatinalData$CountryCode)
sum(intersect(countryData$X, educatinalData$CountryCode))
length(intersect(countryData$X, educatinalData$CountryCode))
table(countryData$X %in% countryData$X)
dim(mergedData)
names(countryData)
head(CountryData$X)
head(CountryData)
names(countryData)
head(CountryData)
head(countryData)
head(educatinalData)
arrange(countryData, desc(X)
arrange(countryData, desc(X))
sortData <- arrange(countryData, desc(X))
sortData[13,]
names(countryData)
names(educatinalData)
head(countryData)
countryData <- read.csv("countryGrossDomesticProduct.csv", skip = 4)
head(countryData)
table(countryData$X %in% countryData$X) # TRUE 330
length(intersect(countryData$X, countryData$X) # [1] 224
length(intersect(countryData$X, countryData$X)) # [1] 224
table(countryData$X %in% countryData$X) # TRUE 330
table(countryData$X %in% countryData$X) # TRUE 330
length(intersect(countryData$X, countryData$X)) # [1] 224
sortData <- arrange(countryData, desc(X))
sortData[13,]
head(educatinalData)
sortData <- arrange(countryData, desc(X.3))
sortData[13,]
sortData[1,]
sortData[6,]
sortData[13,]
head(countryData)
sortData <- arrange(countryData, desc(X.4))
sortData[13,]
sortData[1,]
sortData[13,]
names(educatinalData)
mergedData <- merge(countryData, educatinalData, by.x="X", by.y="CountryCode", all = TRUE)
mergedData <- merge(countryData, educatinalData, by.x="X", by.y="CountryCode", all = TRUE)
names(mergedData)
sortData <- arrange(mergedData, desc(X.4))
sortData[13,]
tail(countryData)
summary(countryData)
quantile(countryData)
quantile(countryData, na.rm = TRUE)
sum(is.na(countryData$X))
summary(countryData)
tail(countryData)
sortData <- arrange(mergedData, desc(X.1))
sortData[13,]
head(sortData)
View(countryData)
countryData <- read.csv("countryGrossDomesticProduct.csv")
View(countryData)
names(countryData)
countryData <- filter(countryData, X != NA)
countryData <- filter(countryData, is.na(X))
View(mergedData)
countryData <- countryData[countryData$X %in% educatinalData$CountryCode, ]
countryData <- countryData[countryData$X %in% educatinalData$CountryCode, ]
countryData
countryData$X
countryData <- read.csv("countryGrossDomesticProduct.csv")
countryData <- countryData[countryData$X %in% educatinalData$CountryCode, ]
View(countryData)
names(countryData)
sum(is.na(countryData$Gross.domestic.product.2012))
sortData <- arrange(countryData, desc(Gross.domestic.product.2012))
sortData[13,]
View(sortData)
sortData[sortData$Gross.domestic.product.2012,]
View(sortData)
sortData <- arrange(countryData, desc(Gross.domestic.product.2012))
View(sortData)
sortData <- arrange(countryData, desc(X.3))
sortData[13,]
sortData <- arrange(countryData, desc(X.3))
View(sortData)
countryData <- countryData[countryData$X %in% educatinalData$CountryCode & countryData$Gross.domestic.product.2012 %in% (1:190), ]
View(countryData)
sortData <- arrange(countryData, desc(X.3))
sortData[13,]
sortData[13,]
sortData <- arrange(countryData, desc(X.3))
sortData[13,]
rm(sortData)
sortData <- arrange(countryData, desc(X.3))
sortData[13,]
countryData[13,]
names(educatinalData)
length(intersect(countryData$X, educatinalData$CountryCode)) # [1] 229
table(countryData$X %in% educatinalData$CountryCode) # TRUE 330
View(educatinalData)
mergedData <- merge(countryData, educatinalData, by.x="X", by.y="CountryCode", all = TRUE)
names(mergedData)
tapply(countryData$Gross.domestic.product.2012, countryData$Income.Group, mean)
View(mergedData)
mergedData <- merge(countryData, educatinalData, by.x="X", by.y="CountryCode", type = "left", all = TRUE)
View(mergedData)
mergedData <- mergedData[!is.na(mergedData$Gross.domestic.product.2012),]
View(mergedData)
tapply(countryData$Gross.domestic.product.2012, countryData$Income.Group, mean)
tapply(mergedData$Gross.domestic.product.2012, mergedData$Income.Group, mean)
tapply(as.numeric(mergedData$Gross.domestic.product.2012), mergedData$Income.Group, mean)
as.numeric(mergedData$Gross.domestic.product.2012)
mergedData$Income.Group
mergedData$gdpGroups <- cut(mergedData$Gross.domestic.product.2012,
breaks = quantile(mergedData$Gross.domestic.product.2012))
mergedData$gdpGroups <- cut(as.numeric(mergedData$Gross.domestic.product.2012),
breaks = quantile(mergedData$Gross.domestic.product.2012))
gdp <- as.numeric(mergedData$Gross.domestic.product.2012)
mergedData$gdpGroups <- cut(gdp, breaks = quantile(mergedData$Gross.domestic.product.2012))
mergedData$gdpGroups <- cut(gdp, breaks = quantile(gdp))
table(mergedData$gdpGroups, mergedData$X.3)
mergedData$gdpGroups
s1 <- seq(1, 10, by = 2); s1
s2 <- seq(1, 10, length = 3); s2
x <- c(1,3,8,25,100); seq(along = x)
restData$nearMe <- restData$neighborhood %in% c("Roland Park", "Homeland")
table(mergedData$gdpGroups, mergedData$X.3)
gdp
quantile(gdp)
View(mergedData)
mergedData$gdpGroups
table(mergedData$X.3, mergedData$gdpGroups)
table(mergedData$gdpGroups)
data <- mergedData$income.Group = "Lower middle income" & mergedData$gdpGroups == (144,191]
data <- mergedData[mergedData$income.Group == "Lower middle income" & mergedData$gdpGroups == (144,191],]
data <- mergedData[mergedData$income.Group == "Lower middle income" & mergedData$gdpGroups == "(144,191]",]
data <- mergedData[mergedData$income.Group == "Lower middle income" & mergedData$gdpGroups == "(144,191]",]
data <- mergedData[which(mergedData$income.Group == "Lower middle income" & mergedData$gdpGroups == "(144,191]"),]
data <- mergedData[which(mergedData$Income.Group == "Lower middle income" & mergedData$gdpGroups == "(144,191]"),]
data <- mergedData[mergedData$Income.Group == "Lower middle income",]
View(data)
data <- mergedData[mergedData$Income.Group == "Lower middle income" & mergedData$gdpGroups == "(144,191]",]
