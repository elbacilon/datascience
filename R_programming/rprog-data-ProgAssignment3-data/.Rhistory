dataState <- data[ data[,2] == i, ]
dataStateRanked <- dataState[ order(dataState[,3], dataState[,1]), ]
if (num == "best") {
new.row <- dataStateRanked[1, c(1,2)]
} else if (num == "worst") {
new.row <- dataStateRanked[nrow(dataStateRanked), c(1,2)]
} else if (num > nrow(dataStateRanked)) {
new.row <- c("NA", dataStateRanked[1, 2])
} else {
new.row <- dataStateRanked[num, c(1,2)]
}
y <- rbind(y, new.row) # insert new row
}
}
data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
dataState <- data[ data[,2] == "TX", ]
dataState
View(dataState)
#  data <- x[(x[, 23] != "Not Available") & (data[,2] == i), c(2, 7, z)]
data <- x[(x[, 23] != "Not Available") & (data[,2] == i), c(2, 7, z)]
# data <- x[(x[, 23] != "Not Available") & (data[,2] == TX"), c(2, 23)]
data <- x[(x[, 23] != "Not Available") & (data[,2] == "TX"), c(2, 23)]
data <- x[Which(x[, 23] != "Not Available", data[,2] == "TX"), c(2, 23)]
data <- x[ Which(x[, 23] != "Not Available" & data[,2] == "TX"), c(2, 23)]
data <- x[(x[, 23] != "Not Available" & data[,2] == "TX"), c(2, 23)]
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- x[(x[, 23] != "Not Available" & x[,2] == "TX"), c(2, 23)]
data <- x[which(x[, 23] != "Not Available" & x[,2] == "TX"), c(2, 23)]
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
x[,2] == "TX"
data <- x[which(x[, 23] != "Not Available" & x[,7] == "TX"), c(2, 23)]
i <- "TX"
z <- 23
data <- x[(x[, z] != "Not Available") & (x[, 7] == i), c(2, 7, z)]
rm(i)
rm(z)
data <- x[(x[, 23] != "Not Available" & x[,7] == "TX"), c(2, 23)]
data
View(data)
sum(x[,7] == "TX")
c(i, data[1, 1])
i <- "TX"
c(i, data[1, 1])
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == "TX"), c(2, 23)]
## For each state, find the hospital of the given rank
For i in unique(data$State) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == i), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], i)
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], i)
} else if (num > nrow(dataStateRanked)) {
new.row <- c("NA", i)
} else {
new.row <- c(data[num, 1], i)
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
}
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == "TX"), c(2, 23)]
## For each state, find the hospital of the given rank
For i in unique(data$State) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == i), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], i)
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], i)
} else if (num > nrow(dataStateRanked)) {
new.row <- c("NA", i)
} else {
new.row <- c(data[num, 1], i)
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
}
data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
tapply(data[,3], data[,2], min)
table(tapply(data[,3], data[,2], min))
# data.frame(tapply(data[,3], data[,2], min))
data.frame(tapply(data[,3], data[,2], min))
p <- unique(data$State)
p
length(p)
p[1]
x[,7] == p[1]
sum(x[,7] == p[1])
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
## For each state, find the hospital of the given ran
p <- unique(data$State)
For i in length(p) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
}
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
## For each state, find the hospital of the given ran
p <- unique(data$State)
For i in length(p) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
## For each state, find the hospital of the given ran
p <- unique(data$State)
For i in length(p) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
## For each state, find the hospital of the given ran
p <- unique(data$State)
For i in length(p) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
}
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
## For each state, find the hospital of the given ran
p <- unique(data$State)
For i in 1:length(p) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
}
# rankall("heart attack", "best") would return a data frame containing the names of the hospitals that
# are the best in their respective states for 30-day heart attack death rates. The function should return a value
# for every state (some may be NA). The first column in the data frame is named hospital, which contains
# the hospital name, and the second column is named state, which contains the 2-character abbreviation for
# the state name. Hospitals that do not have data on a particular outcome should be excluded from the set of
# hospitals when deciding the rankings.
# Handling ties. The rankall function should handle ties in the 30-day mortality rates in the same way
# that the rankhospital function handles ties.
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
## For each state, find the hospital of the given ran
p <- unique(data$State)
for i in 1:length(p) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
}
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
## For each state, find the hospital of the given ran
p <- unique(data$State)
for (i in 1:length(p)) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
}
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
warnings()
rm(list = ls())
setwd("C:/Users/Cedric/Documents/GitHub/datascience/R_programming/rprog-data-ProgAssignment3-data")
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
## For each state, find the hospital of the given ran
p <- unique(data$State)
for (i in 1:length(p)) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
}
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
p <- unique(data$State)
p <- unique(x$State)
length(p)
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
## For each state, find the hospital of the given ran
p <- unique(x$State)
for (i in 1:length(p)) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
}
}
head(rankall("heart attack", 20), 10)
ata <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23)]
View(data)
data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23, 7)]
View(data)
c(data[1, 1], p[1])
c(data[1, 1], p[2])
rankall <- function(outcome, num = "best") {
## Read outcome data
x <- data.frame() # create empty data frame
y <- data.frame() # create empty data frame
x <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome is valid
if(any(c("heart attack", "heart failure", "pneumonia") == outcome) == FALSE) stop("invalid outcome")
## Return hospital name in that state with the given rank 30-day death rate
if (outcome == "heart attack") {
z <- 11
} else if (outcome == "heart failure") {
z <- 17
} else if (outcome == "pneumonia") {
z <- 23
}
# keep Hospital Names, State and outcome columns, remove outcome with NA
# data <- x[(x[, 23] != "Not Available"), c(2, 7, 23)]
# data <- x[(x[, 23] != "Not Available" & x[,7] == p[1]), c(2, 23, 7)]
## For each state, find the hospital of the given ran
p <- unique(x$State)
for (i in 1:length(p)) {
data <- x[(x[, z] != "Not Available") & (x[, 7] == p[i]), c(2, z)]
data <- data[ order(data[,2], data[,1]), ]
if (num == "best") {
new.row <- c(data[1, 1], p[i])
} else if (num == "worst") {
new.row <- c(data[nrow(data), 1], p[i])
} else if (num > nrow(data)) {
new.row <- c("NA", p[i])
} else {
new.row <- c(data[num, 1], p[i])
}
## Return a data frame with the hospital names and the (abbreviated) state name
y <- rbind(y, new.row) # insert new row
y
}
}
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
warnings()
warnings(rankall)
